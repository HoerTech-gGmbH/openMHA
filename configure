#!/bin/bash

# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2013 2014 2015 2016 2017 2018 HörTech gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License, 
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.

(
    PREFIX="./"
for arg in "$@"; do
    case "$arg" in
    --prefix=*)
        PREFIX=`echo $arg | sed 's/--prefix=//'`
        ;;

    --debug)
        DEBUG="-g";;

    --help)
        echo 'usage: ./configure [options]'
        echo 'options:'
        echo '  --prefix=<path>: installation prefix'
        echo '  --debug : include debug symbols'
        echo 'all invalid options are silently ignored'
        exit 0
        ;;
    esac
done

    ARCH=`uname -m`
    echo ARCH=$ARCH


    case `uname -s` in
        *Linux*)
            PLATFORM=linux
            echo PLATFORM=linux
            echo DYNAMIC_LIB_EXT=".so"
            GCC_VER=`gcc -dumpversion | head -1|sed -e 's/.*[[:blank:]]//' -e 's/\([2-4]\)\.\([0-9]*\)\.\([0-9]*\)/-\1.\2/' -e 's/\([5-9]\)\.\([0-9]*\)\.\([0-9]*\)/-\1/' -e 's/^[0-9]/-&/1'`
            echo GCC_VER=${GCC_VER}
            echo BUILD_DIR=${ARCH}-${PLATFORM}-gcc${GCC_VER}
            ;;
        *Cygwin* | *Msys* | *MinGW* | *MINGW* )
            PLATFORM=MinGW
            echo PLATFORM=MinGW
            echo DYNAMIC_LIB_EXT=".dll"
            GCC_VER=`gcc -dumpversion | head -1|sed -e 's/.*[[:blank:]]//' -e 's/\([2-4]\)\.\([0-9]*\)\.\([0-9]*\)/-\1.\2/' -e 's/\([5-9]\)\.\([0-9]*\)\.\([0-9]*\)/-\1/' -e 's/^[0-9]/-&/1'`
            echo GCC_VER=${GCC_VER}
            echo BUILD_DIR=${ARCH}-${PLATFORM}-gcc${GCC_VER}
            ;;
        Darwin)
            PLATFORM=Darwin
            echo PLATFORM=Darwin
            echo DYNAMIC_LIB_EXT=".dylib"
            echo BUILD_DIR=${ARCH}-${PLATFORM}-clang
            echo 'CXXFLAGS+=-Wno-error=unused-command-line-argument'
            echo TOOLSET=clang
            echo WITH_JACK=yes
            echo LDLIBS+='-L/opt/local/lib'
            MACCXXFLAGS+=-I/opt/local/include
    esac
    
    #echo 'PREFIX:=$(dir $(lastword $(MAKEFILE_LIST)))/mha'
    echo PREFIX=$PREFIX
    pkg-config alsa && (echo "WITH_ALSA=yes")
    pkg-config jack && (echo "WITH_JACK=yes")
    if [ "x$PLATFORM" = "xMinGW" ]
    then echo WITH_JACK=yes
         if [ "x$ARCH" = "xx86_64" ]
         then echo "JACK_LINKER_COMMAND = -ljack64"
         fi
    fi

    case $ARCH in
        arm*)
            ;;
        x86_64*|i686*)
            echo "SSE+=-msse -msse2 -mfpmath=sse"
            ;;
    esac
    echo 'OPTIM=-O3 $(SSE) -ffast-math -fomit-frame-pointer -fno-finite-math-only'
    echo 'CXXFLAGS+=-Wall -Werror -std=c++11 -fPIC $(OPTIM)' ${MACCXXFLAGS} $DEBUG
    echo 'CFLAGS+=-Wall -Werror -std=gnu11 -fPIC $(OPTIM)' ${MACCXXFLAGS} $DEBUG
    if [ "x$(which octave)" = "x" ]
    then
	      if [ "x$(which matlab)" = "x" ]
	      then
            echo "WITH_TESTS=NO"
	      else
	          echo "MHA_TEST_COMMAND=matlab -nodesktop -nosplash -nodisplay -r \"set_environment;exit(~runtests())\""
	      fi
    else
	      echo "MHA_TEST_COMMAND=octave --no-gui --no-window-system --eval \"set_environment;exit(~runtests())\""
    fi
) |tee config.mk

# Local Variables:
# coding: utf-8-unix
# indent-tabs-mode: nil
# End:
