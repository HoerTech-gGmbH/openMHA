# File-to-file hearing impairment simulator processing sound files.

# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2017 2018 2019 2020 2021 HörTech gGmbH
# Copyright © 2023 2024 Hörzentrum Oldenburg gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License, 
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.

# This configuration implements hearing impairment simulation for
# audio file to processed audio file. You need to set the names of
# the input and output sound files and the calibration values below
# before you can use this configuration.

# Processing 2 input channels: for two impaired ears
nchannels_in = 2

srate = 48000
# If the sampling rate is changed, then the parameter settings of both 
# gammatone filterbanks must be recomputed as well. Search for the comments
# paragraphs containing the number 48000 in this file and adapt the
# computations and settings accordingly. Alternatively you can resample
# the input sound file to 48000Hz sampling rate before processing.

fragsize=32

# MHA calibration plugin
mhalib = transducers

# Set the filenames of the input and output sound files.
iolib=MHAIOFile
io.in = 
io.out =

# Replace 110 with correct dB SPL calibration values in the following lines.
# Hearing impairment simulation is non-linear and depends on realistic
# calibration.
# E.g. if your input sound file contains soft speech recorded with 50 dB SPL
# at the location of the recording microphone, and the sound data in the
# sound file have an RMS of -20dB re full scale, then you need to
# change the input peaklevel to 70 dB SPL. You may want to set the output
# peaklevels to the same values as the input peaklevels to make input and
# sound files output directly comparable when playing with the same playback
# volume settings.
mha.calib_in.peaklevel = [110 110]
mha.calib_out.peaklevel = [110 110]

mha.plugin_name = mhachain:c
mha.c.use_profiling = yes

mha.c.algos=[noise:subnormal_protection split:split_gtfb split:split_dc split:split_smearing matrixmixer]

# The gammatone filterbank gtfb_analyzer has no inherent subnormal protection.
# Add protecting noise with low level.
mha.c.subnormal_protection.mode = add
mha.c.subnormal_protection.lev = -100

# The split plugin is used here to compute the gammatone filterbank in parallel to
# all other processing on a separate CPU at the cost of 1 block of delay.
mha.c.split_gtfb.thread_platform = posix
mha.c.split_gtfb.delay = yes
mha.c.split_gtfb.worker_thread_scheduler = SCHED_FIFO
mha.c.split_gtfb.worker_thread_priority = 22

mha.c.split_gtfb.channels = [2]
mha.c.split_gtfb.algos = [mhachain:c]
mha.c.split_gtfb.c.use_profiling = yes
mha.c.split_gtfb.c.algos = [gtfb_analyzer delay]

# A 32 band gammatone filterbank is used for expansion and spectral smearing.
# 2 channels times 32 bands mean we should have 64 output channels after the
# filterbank, but actually we have 128 because the gammatone filterbank will
# produce real and imaginary parts for each band.
# The settings for the gammatone filterbank have been pre-computed with the
# matlab version of the uni-oldenburg gammatone filterbank demo available at
# https://web.archive.org/web/20231117124627/https://medi.uni-oldenburg.de/download/demo/gammatone-filterbank/gammatone_filterbank-1.1.zip
# Center frequencies are (Hz): [73.2 107.7 146.0 188.7 236.3 289.4 348.4 414.2
# 487.5 569.1 660.1 761.4 874.3 1000 1140 1296 1470 1664 1879 2119 2387 2685
# 3017 3387 3799 4259 4770 5340 5974 6681 7469 8346]
mha.c.split_gtfb.c.gtfb_analyzer.coeff = [(0.99561638958159948+0.0095449756826289488i) (0.99507010707340771+0.014024943538368504i) (0.99443812829012368+0.019009939820419028i) (0.99370509117490646+0.024556040176047022i) (0.99285255539665829+0.030725299794767361i) (0.99185834011204488+0.037586315374378898i) (0.99069571473173357+0.045214814697683244i) (0.98933241019968376+0.053694265355390222i) (0.98772941145071935+0.063116489355872607i) (0.9858394836220955+0.073582263732720504i) (0.9836053751375532+0.085201878154311156i) (0.98095762988799928+0.098095608099546677i) (0.97781192843472176+0.11239404525382835i) (0.97406586467496903+0.12823820389908602i) (0.96959505025915815+0.1457792912561113i) (0.96424842525550847+0.16517798843707807i) (0.95784264193007829+0.18660303361559155i) (0.95015538207464978+0.21022882611067534i) (0.94091747195193676+0.2362316742606651i) (0.9298036802955727+0.26478418524815533i) (0.91642213566048059+0.29604713472217192i) (0.90030239748381435+0.33015795134911119i) (0.8808823866983122+0.36721470079696927i) (0.85749466468882973+0.40725415358897571i) (0.82935299786220518+0.45022217912430784i) (0.79554083392783226+0.49593434876803738i) (0.75500434515295256+0.54402431078124591i) (0.70655419046858214+0.59387733019824906i) (0.64888226147292283+0.64454656901897867i) (0.58060255719672782+0.6946505605189035i) (0.50032907686917338+0.74225246581254734i) (0.40680816155979965+0.78472595683903268i)]
mha.c.split_gtfb.c.gtfb_analyzer.norm_phase = [(-9.8219633082375274e-10+1.9562849917118916e-10i) (7.3132902854230646e-10+1.356053735589881e-09i) (1.4114265599064208e-09-1.9037939611248519e-09i) (-3.6448881384527146e-09-3.1557504060829e-11i) (4.208545536678763e-09+3.70249150210638e-09i) (-3.3498657057860097e-09-7.9410660881605798e-09i) (-1.0424910842610084e-08+8.1776531883509056e-09i) (3.6458767550318969e-09+2.0035854657886273e-08i) (2.873344998015433e-08+1.2398598493293658e-08i) (4.3373410246044799e-08-2.0742215415486909e-08i) (2.0929431922358304e-08-7.081511042601193e-08i) (-4.5266931335708689e-08-1.039542919032186e-07i) (-1.4457008296580609e-07-9.6890821198228503e-08i) (-2.6703581602134656e-07+7.4523932282520191e-11i) (-3.7825765598962117e-07+1.5705084907041015e-07i) (-3.8405543175224018e-07+4.9672789788671625e-07i) (-2.6637908036968322e-07+9.2447319615897545e-07i) (-6.6596861862713151e-08+1.4718340495748433e-06i) (6.6276201751887396e-07+2.1552552675910447e-06i) (1.8747992408660626e-06+2.8943583724487559e-06i) (3.8194566641752036e-06+3.6309545534659806e-06i) (6.9519557993096566e-06+4.0515081668412116e-06i) (9.8058942585358268e-06+7.3817854822099166e-06i) (1.7855896547198648e-05+5.5621498689424992e-06i) (2.7469480414420326e-05+7.4558783280481888e-06i) (3.5549972087678393e-05+2.4653275126503647e-05i) (6.4855201134337689e-05+1.0231897125158211e-05i) (7.7974562277340691e-05+6.1781320871654547e-05i) (0.00014961332837018401+1.5964160359699198e-05i) (0.00018152061169825911+0.00013648265823574136i) (0.00026358866313758563+0.00021794722540293226i) (0.00023397844232976459+0.00045744296688400349i)]
# The phase corrections in norm_phase have been computed for 8ms algorithmic
# delay. 8ms was chosen over the 4ms suggested in [Hohmann 2002] because the
# real time demands of a hearing impairment simulation are not as high as e.g.
# for a hearing aid simulation (the listener should not be in the same room as
# the processed sound field) and this reduces the ripples in the frequency
# response at low frequencies. The following sample delays are required to
# achieve 8ms in all bands:
mha.c.split_gtfb.c.delay.delay = [0 0 0 0 0 0 0 0 0 0 0 0 25 25 62 62 95 95 125 125 151 151 175 175 197 197 216 216 234 234 249 249 263 263 276 276 287 287 297 297 306 306 314 314 322 322 328 328 334 334 340 340 344 344 349 349 352 352 356 356 359 359 362 362 ...
                                  0 0 0 0 0 0 0 0 0 0 0 0 25 25 62 62 95 95 125 125 151 151 175 175 197 197 216 216 234 234 249 249 263 263 276 276 287 287 297 297 306 306 314 314 322 322 328 328 334 334 340 340 344 344 349 349 352 352 356 356 359 359 362 362]
# In order to reproduce the gtfb settings with the uni-oldenburg gammatone
# filterbank: Edit files Example_Filterbank.m and Example_Synthesis.m in the
# gammatone filterbank demo, change sampling rate to 48000, change upper cutoff
# frequency to 8500, change delay to 0.008 (the latter can only be found in
# Example_Synthesis.m), then execute both files in Octave (or Matlab).
# The norm_phase settings above are the products of the normalization factors
# from the Example_Filterbank.m demo, the phase factors from the
# Example_Synthesis.m demo, and an additional factor sqrt(2) to account for
# discarding the imaginary gammatone filterbank output below. Other gtfb
# settings above as well as the recombination gains used below are printed
# directly by the two demos.

# Run expansion on yet another CPU in parallel to all other processing at the
# cost of one additional block of delay.
mha.c.split_dc.worker_thread_scheduler = SCHED_FIFO
mha.c.split_dc.worker_thread_priority = 23
mha.c.split_dc.delay = yes
mha.c.split_dc.thread_platform = posix

mha.c.split_dc.channels = [128]
mha.c.split_dc.algos = [mhachain:c]
mha.c.split_dc.c.algos = [route:discard_imag dc gain]


# Discard the imaginary part of the gammatone filterbank output signal,
# keep only the real part of the signal in the audio path.
mha.c.split_dc.c.discard_imag.out= [:0 :2 :4 :6 :8 :10 :12 :14 :16 :18 :20 :22 :24 :26 :28 :30 :32 :34 :36 :38 :40 :42 :44 :46 :48 :50 :52 :54 :56 :58 :60 :62 :64 :66 :68 :70 :72 :74 :76 :78 :80 :82 :84 :86 :88 :90 :92 :94 :96 :98 :100 :102 :104 :106 :108 :110 :112 :114 :116 :118 :120 :122 :124 :126]

# The gammatone filterbank needs the following recombination gains (in dB).
mha.c.split_dc.c.gain.gains = [-1.56 -1.96 -2.62 -3.07 -3.44 -3.65 -3.71 -3.60 -3.59 -3.61 -3.60 -3.60 -3.61 -3.58 -3.60 -3.60 -3.60 -3.60 -3.59 -3.61 -3.63 -3.57 -3.61 -3.61 -3.58 -3.66 -3.54 -3.68 -3.45 -3.76 -4.20 -1.28 ...
                               -1.56 -1.96 -2.62 -3.07 -3.44 -3.65 -3.71 -3.60 -3.59 -3.61 -3.60 -3.60 -3.61 -3.58 -3.60 -3.60 -3.60 -3.60 -3.59 -3.61 -3.63 -3.57 -3.61 -3.61 -3.58 -3.66 -3.54 -3.68 -3.45 -3.76 -4.20 -1.28]

mha.c.split_dc.c.dc.gtmin=[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
mha.c.split_dc.c.dc.gtstep=[20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20]
mha.c.split_dc.c.dc.tau_attack = [0.02]
mha.c.split_dc.c.dc.tau_decay = [0.1]
mha.c.split_dc.c.dc.tau_rmslev = [0]
# The following gain table implements a gain table for a symmetric, sloping
# hearing loss with 30dB loss at low frequencies up to 750Hz and increasing
# loss up to 70dB at 8000Hz. The gain table has one line per band and ear.
# The columns contain the negative gains for [0,20,40,60,80,100]dB SPL input
# levels. Note that in order to simulate the recruitment effect, gains for
# higher input levels should attenuate less than gains for lower input levels.
mha.c.split_dc.c.dc.gtdata=[ ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-35 -35 -35 -15   0   0]; ...
   [-37 -37 -37 -17   0   0]; ...
   [-38 -38 -38 -19   0   0]; ...
   [-39 -39 -39 -20   0   0]; ...
   [-41 -41 -41 -22  -1   0]; ...
   [-42 -42 -42 -23  -1   0]; ...
   [-43 -43 -43 -25  -2   0]; ...
   [-44 -44 -44 -26  -3   0]; ...
   [-46 -46 -46 -28  -3   0]; ...
   [-47 -47 -47 -29  -4  -1]; ...
   [-48 -48 -48 -31  -4  -1]; ...
   [-49 -49 -49 -32  -5  -2]; ...
   [-50 -50 -50 -34  -5  -3]; ...
   [-51 -51 -51 -35  -6  -3]; ...
   [-52 -52 -52 -37  -6  -3]; ...
   [-54 -54 -54 -39  -6  -4]; ...
   [-55 -55 -55 -41  -7  -4]; ...
   [-56 -56 -56 -44  -7  -4]; ...
   [-58 -58 -58 -46  -7  -4]; ...
   [-59 -59 -59 -48  -7  -4]; ...
   [-61 -61 -61 -52 -13  -5]; ...
   [-63 -63 -63 -55 -24  -7]; ...
   [-65 -65 -65 -59 -34  -9]; ...
   [-67 -67 -67 -62 -44 -12]; ...
   [-69 -69 -69 -66 -55 -14]; ...
   [-70 -70 -70 -69 -65 -16]; ...
   [-72 -72 -72 -72 -72 -17]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-34 -34 -34 -13   0   0]; ...
   [-35 -35 -35 -15   0   0]; ...
   [-37 -37 -37 -17   0   0]; ...
   [-38 -38 -38 -19   0   0]; ...
   [-39 -39 -39 -20   0   0]; ...
   [-41 -41 -41 -22  -1   0]; ...
   [-42 -42 -42 -23  -1   0]; ...
   [-43 -43 -43 -25  -2   0]; ...
   [-44 -44 -44 -26  -3   0]; ...
   [-46 -46 -46 -28  -3   0]; ...
   [-47 -47 -47 -29  -4  -1]; ...
   [-48 -48 -48 -31  -4  -1]; ...
   [-49 -49 -49 -32  -5  -2]; ...
   [-50 -50 -50 -34  -5  -3]; ...
   [-51 -51 -51 -35  -6  -3]; ...
   [-52 -52 -52 -37  -6  -3]; ...
   [-54 -54 -54 -39  -6  -4]; ...
   [-55 -55 -55 -41  -7  -4]; ...
   [-56 -56 -56 -44  -7  -4]; ...
   [-58 -58 -58 -46  -7  -4]; ...
   [-59 -59 -59 -48  -7  -4]; ...
   [-61 -61 -61 -52 -13  -5]; ...
   [-63 -63 -63 -55 -24  -7]; ...
   [-65 -65 -65 -59 -34  -9]; ...
   [-67 -67 -67 -62 -44 -12]; ...
   [-69 -69 -69 -66 -55 -14]; ...
   [-70 -70 -70 -69 -65 -16]; ...
   [-72 -72 -72 -72 -72 -17]; ...
]
# When like above we use large steps between the gain table input levels,
# it is important that the gain table is interpolated in the log domain
# (see openMHA plugin manual about the dc plugin).
mha.c.split_dc.c.dc.log_interp = yes

# Run spectral smearing on yet another core in parallel to all other processing at the
# cost of one additional block of delay.
mha.c.split_smearing.worker_thread_scheduler = SCHED_FIFO
mha.c.split_smearing.worker_thread_priority = 22
mha.c.split_smearing.delay = yes
mha.c.split_smearing.thread_platform = posix
mha.c.split_smearing.channels = [64]

# For the spectral smearing, we multiply low-frequency noise with the signal.
# The cutoff frequency of the noise determines half the ammount of the spectral
# smearing (A signal at frequency f will be smeared from f-fcutoff to
# f+fcutoff). Since the signal is split into frequency bands, we can use
# different smearings for each band and ear.
# In order to generate the low-frequency noise, we filter white noise with a
# low-pass filter. For best results, the noises should be statistically
# independent across bands. Therefore we use 64 different noise generators,
# and filter each with a different low-pass filter. We use a gammatone filters
# with a center frequency of 0 Hz and different bandwidths for this purpose.
# (The gammatone filter bandwidth for a filter centered at 0 Hz is equal to
# the smearing width, as half the bandwidth is equal to the positive cutoff.)

# Split into 64 single-band signals in order to have a filterbank with only one
# band for each low-pass filtering task. Do not distribute over CPUs, use the
# dummy platform to avoid overhead.
mha.c.split_smearing.algos = [split:s]
mha.c.split_smearing.s.thread_platform = dummy
mha.c.split_smearing.s.channels = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
# Having 1 signal processing chain per band, name the chains after left (L) or
# right (R) ear and the center frequency of the band in Hz, e.g. L0073 for the
# left ear band with 73 Hz center frequency.
mha.c.split_smearing.s.algos = [mhachain:L0073 mhachain:L0108 mhachain:L0146 mhachain:L0189 mhachain:L0236 mhachain:L0289 mhachain:L0348 mhachain:L0414 mhachain:L0488 mhachain:L0569 mhachain:L0660 mhachain:L0761 mhachain:L0874 mhachain:L1000 mhachain:L1140 mhachain:L1296 mhachain:L1470 mhachain:L1663 mhachain:L1879 mhachain:L2119 mhachain:L2387 mhachain:L2685 mhachain:L3017 mhachain:L3387 mhachain:L3799 mhachain:L4259 mhachain:L4770 mhachain:L5340 mhachain:L5974 mhachain:L6681 mhachain:L7469 mhachain:L8346 mhachain:R0073 mhachain:R0108 mhachain:R0146 mhachain:R0189 mhachain:R0236 mhachain:R0289 mhachain:R0348 mhachain:R0414 mhachain:R0488 mhachain:R0569 mhachain:R0660 mhachain:R0761 mhachain:R0874 mhachain:R1000 mhachain:R1140 mhachain:R1296 mhachain:R1470 mhachain:R1663 mhachain:R1879 mhachain:R2119 mhachain:R2387 mhachain:R2685 mhachain:R3017 mhachain:R3387 mhachain:R3799 mhachain:R4259 mhachain:R4770 mhachain:R5340 mhachain:R5974 mhachain:R6681 mhachain:R7469 mhachain:R8346]

# Same processing chain for spectral smearing in each of the 64 bands except
# for smearing width.
mha.c.split_smearing.s.L0073.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0108.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0146.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0189.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0236.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0289.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0348.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0414.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0488.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0569.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0660.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0761.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L0874.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1000.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1140.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1296.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1470.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1663.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L1879.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L2119.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L2387.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L2685.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L3017.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L3387.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L3799.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L4259.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L4770.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L5340.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L5974.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L6681.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L7469.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.L8346.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0073.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0108.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0146.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0189.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0236.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0289.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0348.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0414.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0488.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0569.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0660.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0761.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R0874.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1000.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1140.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1296.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1470.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1663.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R1879.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R2119.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R2387.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R2685.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R3017.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R3387.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R3799.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R4259.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R4770.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R5340.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R5974.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R6681.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R7469.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]
mha.c.split_smearing.s.R8346.algos = [save_wave:signal noise:noisegen gtfb_analyzer:lpfilt route:lpnoise ac_mul route:smeared]

# For spectral smearing, low-pass filtered noise is multiplied with the signal.
# First create broadband noise, uncorrellated across the 32 bands.
mha.c.split_smearing.s.L0073.noisegen.mode = replace
mha.c.split_smearing.s.L0073.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0108.noisegen.mode = replace
mha.c.split_smearing.s.L0108.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0146.noisegen.mode = replace
mha.c.split_smearing.s.L0146.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0189.noisegen.mode = replace
mha.c.split_smearing.s.L0189.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0236.noisegen.mode = replace
mha.c.split_smearing.s.L0236.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0289.noisegen.mode = replace
mha.c.split_smearing.s.L0289.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0348.noisegen.mode = replace
mha.c.split_smearing.s.L0348.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0414.noisegen.mode = replace
mha.c.split_smearing.s.L0414.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0488.noisegen.mode = replace
mha.c.split_smearing.s.L0488.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0569.noisegen.mode = replace
mha.c.split_smearing.s.L0569.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0660.noisegen.mode = replace
mha.c.split_smearing.s.L0660.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0761.noisegen.mode = replace
mha.c.split_smearing.s.L0761.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L0874.noisegen.mode = replace
mha.c.split_smearing.s.L0874.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1000.noisegen.mode = replace
mha.c.split_smearing.s.L1000.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1140.noisegen.mode = replace
mha.c.split_smearing.s.L1140.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1296.noisegen.mode = replace
mha.c.split_smearing.s.L1296.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1470.noisegen.mode = replace
mha.c.split_smearing.s.L1470.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1663.noisegen.mode = replace
mha.c.split_smearing.s.L1663.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L1879.noisegen.mode = replace
mha.c.split_smearing.s.L1879.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L2119.noisegen.mode = replace
mha.c.split_smearing.s.L2119.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L2387.noisegen.mode = replace
mha.c.split_smearing.s.L2387.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L2685.noisegen.mode = replace
mha.c.split_smearing.s.L2685.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L3017.noisegen.mode = replace
mha.c.split_smearing.s.L3017.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L3387.noisegen.mode = replace
mha.c.split_smearing.s.L3387.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L3799.noisegen.mode = replace
mha.c.split_smearing.s.L3799.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L4259.noisegen.mode = replace
mha.c.split_smearing.s.L4259.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L4770.noisegen.mode = replace
mha.c.split_smearing.s.L4770.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L5340.noisegen.mode = replace
mha.c.split_smearing.s.L5340.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L5974.noisegen.mode = replace
mha.c.split_smearing.s.L5974.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L6681.noisegen.mode = replace
mha.c.split_smearing.s.L6681.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L7469.noisegen.mode = replace
mha.c.split_smearing.s.L7469.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.L8346.noisegen.mode = replace
mha.c.split_smearing.s.L8346.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0073.noisegen.mode = replace
mha.c.split_smearing.s.R0073.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0108.noisegen.mode = replace
mha.c.split_smearing.s.R0108.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0146.noisegen.mode = replace
mha.c.split_smearing.s.R0146.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0189.noisegen.mode = replace
mha.c.split_smearing.s.R0189.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0236.noisegen.mode = replace
mha.c.split_smearing.s.R0236.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0289.noisegen.mode = replace
mha.c.split_smearing.s.R0289.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0348.noisegen.mode = replace
mha.c.split_smearing.s.R0348.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0414.noisegen.mode = replace
mha.c.split_smearing.s.R0414.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0488.noisegen.mode = replace
mha.c.split_smearing.s.R0488.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0569.noisegen.mode = replace
mha.c.split_smearing.s.R0569.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0660.noisegen.mode = replace
mha.c.split_smearing.s.R0660.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0761.noisegen.mode = replace
mha.c.split_smearing.s.R0761.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R0874.noisegen.mode = replace
mha.c.split_smearing.s.R0874.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1000.noisegen.mode = replace
mha.c.split_smearing.s.R1000.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1140.noisegen.mode = replace
mha.c.split_smearing.s.R1140.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1296.noisegen.mode = replace
mha.c.split_smearing.s.R1296.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1470.noisegen.mode = replace
mha.c.split_smearing.s.R1470.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1663.noisegen.mode = replace
mha.c.split_smearing.s.R1663.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R1879.noisegen.mode = replace
mha.c.split_smearing.s.R1879.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R2119.noisegen.mode = replace
mha.c.split_smearing.s.R2119.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R2387.noisegen.mode = replace
mha.c.split_smearing.s.R2387.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R2685.noisegen.mode = replace
mha.c.split_smearing.s.R2685.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R3017.noisegen.mode = replace
mha.c.split_smearing.s.R3017.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R3387.noisegen.mode = replace
mha.c.split_smearing.s.R3387.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R3799.noisegen.mode = replace
mha.c.split_smearing.s.R3799.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R4259.noisegen.mode = replace
mha.c.split_smearing.s.R4259.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R4770.noisegen.mode = replace
mha.c.split_smearing.s.R4770.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R5340.noisegen.mode = replace
mha.c.split_smearing.s.R5340.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R5974.noisegen.mode = replace
mha.c.split_smearing.s.R5974.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R6681.noisegen.mode = replace
mha.c.split_smearing.s.R6681.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R7469.noisegen.mode = replace
mha.c.split_smearing.s.R7469.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²
mha.c.split_smearing.s.R8346.noisegen.mode = replace
mha.c.split_smearing.s.R8346.noisegen.lev = 93.9794 # noise with <amplitude²>=1Pa²

# In each band, we use a gammatone filterbank with a single channel with center
# frequency 0Hz for low-pass filtering the noise. A center frequency of 0Hz
# means that the filter coefficient is a real number, i.e. its imaginary part
# is zero. Its magnitude determines the bandwidth which is the same as the
# smearing width. The filter coefficient can be calculated from the desired
# smearing width as described in equation 14 in [Hohmann 2002]. For a fourth-
# order filter centered at 0 Hz for 48000Hz sampling rate, the coefficient is
# coeff=exp(-smearing_width*6.4/48000Hz). The usual normalization for the
# gammatone filter would let the signal component at the center frequency,
# here 0Hz, pass unmodified. This is not what we need here, instead we want to
# compensate so that the filtered, narrow-band noise has the same power as the
# original white noise. [Hohmann 2002] equation 5 gives the frequency response
# of the fourth-order gammatone filter used here: K4(z)=1/(1-coeff*z^-1)^4. We
# need to integrate the squared magnitude of K4 over the unit circle and use
# the reciprocal of the square root of this value as the normalization factor.
# A quick numeric solution in Matlab or Octave is:
#
# phi = [0:1e-5:2*pi];
# lpfilt.norm_phase = 1/sqrt(sum(abs(1./(1-coeff*exp(i*phi)).^4).^2)/length(phi))
#
# The following values were computed for smearing
# width of 150Hz in each band. For a realistic simulation, the smearing width
# should be varied across the bands related to the frequency-dependent hearing
# loss.
#
# [Hohmann 2002]: Hohmann, V. (2002). Frequency analysis and synthesis using a
# gammatone filterbank. Acta Acustica united with Acustica, 88(3), 433-442.
mha.c.split_smearing.s.L0073.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0073.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0108.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0108.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0146.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0146.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0189.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0189.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0236.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0236.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0289.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0289.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0348.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0348.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0414.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0414.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0488.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0488.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0569.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0569.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0660.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0660.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0761.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0761.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L0874.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L0874.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1000.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1000.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1140.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1140.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1296.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1296.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1470.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1470.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1663.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1663.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L1879.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L1879.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L2119.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L2119.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L2387.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L2387.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L2685.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L2685.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L3017.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L3017.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L3387.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L3387.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L3799.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L3799.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L4259.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L4259.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L4770.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L4770.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L5340.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L5340.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L5974.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L5974.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L6681.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L6681.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L7469.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L7469.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.L8346.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.L8346.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0073.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0073.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0108.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0108.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0146.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0146.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0189.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0189.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0236.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0236.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0289.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0289.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0348.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0348.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0414.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0414.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0488.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0488.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0569.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0569.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0660.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0660.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0761.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0761.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R0874.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R0874.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1000.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1000.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1140.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1140.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1296.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1296.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1470.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1470.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1663.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1663.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R1879.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R1879.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R2119.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R2119.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R2387.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R2387.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R2685.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R2685.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R3017.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R3017.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R3387.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R3387.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R3799.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R3799.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R4259.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R4259.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R4770.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R4770.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R5340.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R5340.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R5974.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R5974.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R6681.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R6681.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R7469.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R7469.lpfilt.norm_phase = [0.0000027498]
mha.c.split_smearing.s.R8346.lpfilt.coeff = [0.9802]
mha.c.split_smearing.s.R8346.lpfilt.norm_phase = [0.0000027498]

# The gammatone filterbank for low-pass filtering the noise has again created
# two output channels for every input channel: one for the real-valued part and
# one for the imaginary-valued part (which contains only zeros because of the
# real-valued filter coefficients). We only need to store the real-valued part
# in AC space for the following multiplication with the signal.
mha.c.split_smearing.s.L0073.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0108.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0146.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0189.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0236.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0289.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0348.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0414.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0488.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0569.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0660.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0761.lpnoise.ac = [:0]
mha.c.split_smearing.s.L0874.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1000.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1140.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1296.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1470.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1663.lpnoise.ac = [:0]
mha.c.split_smearing.s.L1879.lpnoise.ac = [:0]
mha.c.split_smearing.s.L2119.lpnoise.ac = [:0]
mha.c.split_smearing.s.L2387.lpnoise.ac = [:0]
mha.c.split_smearing.s.L2685.lpnoise.ac = [:0]
mha.c.split_smearing.s.L3017.lpnoise.ac = [:0]
mha.c.split_smearing.s.L3387.lpnoise.ac = [:0]
mha.c.split_smearing.s.L3799.lpnoise.ac = [:0]
mha.c.split_smearing.s.L4259.lpnoise.ac = [:0]
mha.c.split_smearing.s.L4770.lpnoise.ac = [:0]
mha.c.split_smearing.s.L5340.lpnoise.ac = [:0]
mha.c.split_smearing.s.L5974.lpnoise.ac = [:0]
mha.c.split_smearing.s.L6681.lpnoise.ac = [:0]
mha.c.split_smearing.s.L7469.lpnoise.ac = [:0]
mha.c.split_smearing.s.L8346.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0073.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0108.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0146.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0189.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0236.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0289.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0348.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0414.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0488.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0569.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0660.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0761.lpnoise.ac = [:0]
mha.c.split_smearing.s.R0874.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1000.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1140.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1296.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1470.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1663.lpnoise.ac = [:0]
mha.c.split_smearing.s.R1879.lpnoise.ac = [:0]
mha.c.split_smearing.s.R2119.lpnoise.ac = [:0]
mha.c.split_smearing.s.R2387.lpnoise.ac = [:0]
mha.c.split_smearing.s.R2685.lpnoise.ac = [:0]
mha.c.split_smearing.s.R3017.lpnoise.ac = [:0]
mha.c.split_smearing.s.R3387.lpnoise.ac = [:0]
mha.c.split_smearing.s.R3799.lpnoise.ac = [:0]
mha.c.split_smearing.s.R4259.lpnoise.ac = [:0]
mha.c.split_smearing.s.R4770.lpnoise.ac = [:0]
mha.c.split_smearing.s.R5340.lpnoise.ac = [:0]
mha.c.split_smearing.s.R5974.lpnoise.ac = [:0]
mha.c.split_smearing.s.R6681.lpnoise.ac = [:0]
mha.c.split_smearing.s.R7469.lpnoise.ac = [:0]
mha.c.split_smearing.s.R8346.lpnoise.ac = [:0]

# Multiply signal with low-pass filtered noise. Because the noise is scaled so
# that <amplitude²>=1, the result has the same level as the original signal.
mha.c.split_smearing.s.L0073.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0108.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0146.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0189.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0236.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0289.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0348.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0414.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0488.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0569.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0660.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0761.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L0874.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1000.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1140.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1296.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1470.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1663.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L1879.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L2119.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L2387.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L2685.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L3017.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L3387.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L3799.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L4259.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L4770.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L5340.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L5974.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L6681.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L7469.ac_mul = signal * lpnoise
mha.c.split_smearing.s.L8346.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0073.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0108.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0146.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0189.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0236.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0289.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0348.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0414.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0488.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0569.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0660.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0761.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R0874.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1000.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1140.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1296.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1470.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1663.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R1879.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R2119.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R2387.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R2685.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R3017.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R3387.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R3799.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R4259.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R4770.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R5340.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R5974.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R6681.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R7469.ac_mul = signal * lpnoise
mha.c.split_smearing.s.R8346.ac_mul = signal * lpnoise

# At this point, the processed signal path still contains the low-pass filtered
# noise. Original signal and the smeared signal (ac_mul) both live in AC space.
# Replace the noise with the smeared signal.
# If there are bands where no smearing should be applied, then ac_mul:0 can be
# replaced with signal:0 for these bands.
mha.c.split_smearing.s.L0073.smeared.out = [signal:0]
mha.c.split_smearing.s.L0108.smeared.out = [signal:0]
mha.c.split_smearing.s.L0146.smeared.out = [signal:0]
mha.c.split_smearing.s.L0189.smeared.out = [signal:0]
mha.c.split_smearing.s.L0236.smeared.out = [signal:0]
mha.c.split_smearing.s.L0289.smeared.out = [signal:0]
mha.c.split_smearing.s.L0348.smeared.out = [signal:0]
mha.c.split_smearing.s.L0414.smeared.out = [signal:0]
mha.c.split_smearing.s.L0488.smeared.out = [signal:0]
mha.c.split_smearing.s.L0569.smeared.out = [signal:0]
mha.c.split_smearing.s.L0660.smeared.out = [signal:0]
mha.c.split_smearing.s.L0761.smeared.out = [signal:0]
mha.c.split_smearing.s.L0874.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1000.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1140.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1296.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1470.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1663.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L1879.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L2119.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L2387.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L2685.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L3017.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L3387.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L3799.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L4259.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L4770.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L5340.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L5974.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L6681.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L7469.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.L8346.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R0073.smeared.out = [signal:0]
mha.c.split_smearing.s.R0108.smeared.out = [signal:0]
mha.c.split_smearing.s.R0146.smeared.out = [signal:0]
mha.c.split_smearing.s.R0189.smeared.out = [signal:0]
mha.c.split_smearing.s.R0236.smeared.out = [signal:0]
mha.c.split_smearing.s.R0289.smeared.out = [signal:0]
mha.c.split_smearing.s.R0348.smeared.out = [signal:0]
mha.c.split_smearing.s.R0414.smeared.out = [signal:0]
mha.c.split_smearing.s.R0488.smeared.out = [signal:0]
mha.c.split_smearing.s.R0569.smeared.out = [signal:0]
mha.c.split_smearing.s.R0660.smeared.out = [signal:0]
mha.c.split_smearing.s.R0761.smeared.out = [signal:0]
mha.c.split_smearing.s.R0874.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1000.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1140.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1296.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1470.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1663.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R1879.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R2119.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R2387.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R2685.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R3017.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R3387.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R3799.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R4259.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R4770.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R5340.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R5974.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R6681.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R7469.smeared.out = [ac_mul:0]
mha.c.split_smearing.s.R8346.smeared.out = [ac_mul:0]

# Use the Matrixmixer to combine all bands back to broadband signals for the
# left and right ear, respectively.
mha.c.matrixmixer.m = [ ...
  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]; ...
  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]; ...
]

cmd=start
cmd=quit
