# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2024 Hörzentrum Oldenburg gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License, 
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.


nchannels_in = 2
fragsize = ${FRAGSIZE}
srate = ${SRATE}

mhalib = transducers
iolib = MHAIOJack

mha.plugin_name = dbasync
mha.calib_in.peaklevel = ${CALIB_IN_PEAKLEVEL}
mha.calib_out.peaklevel = ${CALIB_OUT_PEAKLEVEL}
mha.calib_out.fir = ${CALIB_OUT_FIR}

mha.dbasync.plugin_name = split
mha.dbasync.fragsize = ${DBASYNC_FRAGSIZE}
mha.dbasync.delay = ${DBASYNC_DELAY}

mha.dbasync.split.algos = [mhachain:left mhachain:right]
mha.dbasync.split.channels = [1 1]
mha.dbasync.split.thread_platform = ${THREAD_PLATFORM}
mha.dbasync.split.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
mha.dbasync.split.worker_thread_priority = ${WORKER_THREAD_PRIORITY}

mha.dbasync.split.left.algos = [matrixmixer split combinechannels]
mha.dbasync.split.right.algos = [matrixmixer split combinechannels]

mha.dbasync.split.left.matrixmixer.m = ${STIMULATION_TYPE}
mha.dbasync.split.right.matrixmixer.m = ${STIMULATION_TYPE}

mha.dbasync.split.left.split.algos = [mhachain:electric mhachain:acoustic]
mha.dbasync.split.right.split.algos = [mhachain:electric mhachain:acoustic]
mha.dbasync.split.left.split.channels = [1 1]
mha.dbasync.split.right.split.channels = [1 1]
mha.dbasync.split.left.split.thread_platform = ${THREAD_PLATFORM}
mha.dbasync.split.right.split.thread_platform = ${THREAD_PLATFORM}
mha.dbasync.split.left.split.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
mha.dbasync.split.right.split.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
mha.dbasync.split.left.split.worker_thread_priority = ${WORKER_THREAD_PRIORITY}
mha.dbasync.split.right.split.worker_thread_priority = ${WORKER_THREAD_PRIORITY}

mha.dbasync.split.left.split.electric.algos = [mhachain:preprocessing mhachain:vocoder]
mha.dbasync.split.right.split.electric.algos = [mhachain:preprocessing mhachain:vocoder]

# Here, algorithm configurations for preprocessing of the electric signal can 
# be specified:
mha.dbasync.split.left.split.electric.preprocessing.algos = []
mha.dbasync.split.right.split.electric.preprocessing.algos = []

mha.dbasync.split.left.split.electric.vocoder.?read:cfg/vocoder_ace_1ch_left.cfg
mha.dbasync.split.right.split.electric.vocoder.?read:cfg/vocoder_ace_1ch_right.cfg

mha.dbasync.split.left.split.electric.vocoder.overlapadd.electrodogram.randomization_seed = ${ELECTRODOGRAM_RANDOMIZATION_SEED_LEFT}
mha.dbasync.split.right.split.electric.vocoder.overlapadd.electrodogram.randomization_seed = ${ELECTRODOGRAM_RANDOMIZATION_SEED_RIGHT}

mha.dbasync.split.left.split.acoustic.algos = [iirfilter mhachain:hi_simulation mhachain:ha_simulation]
mha.dbasync.split.right.split.acoustic.algos = [iirfilter mhachain:hi_simulation mhachain:ha_simulation]

mha.dbasync.split.left.split.acoustic.iirfilter.B = ${ACOUSTIC_IIRFILTER_B}
mha.dbasync.split.right.split.acoustic.iirfilter.B = ${ACOUSTIC_IIRFILTER_B}
mha.dbasync.split.left.split.acoustic.iirfilter.A = ${ACOUSTIC_IIRFILTER_A}
mha.dbasync.split.right.split.acoustic.iirfilter.A = ${ACOUSTIC_IIRFILTER_A}

# Here, algorithm configurations simulating hearing impairment in the residual 
# acoustic hearing can be specified:
mha.dbasync.split.left.split.acoustic.hi_simulation.algos = []
mha.dbasync.split.right.split.acoustic.hi_simulation.algos = []

# Here, algorithm configurations simulating a hearing aid for treatment of any 
# hearing impairment in the residual acoustic hearing can be specified:
mha.dbasync.split.left.split.acoustic.ha_simulation.algos = []
mha.dbasync.split.right.split.acoustic.ha_simulation.algos = []

io.con_in = ${JACK_INPUT}
io.con_out = ${JACK_OUTPUT}
