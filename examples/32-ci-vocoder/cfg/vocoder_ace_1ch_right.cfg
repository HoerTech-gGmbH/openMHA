# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2024 Hörzentrum Oldenburg gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License, 
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.


algos = [get_rms:get_rms_in ...
         iirfilter ...
         dc ...
         downsample ...
         overlapadd ...
         upsample ...
         ci_auralization_ace:stimulation_signal ...
         route:route_in ...
         get_rms:get_channel_rms_in ...
         split ...
         route:route_out ...
         get_rms:get_channel_rms_out ...
         set_rms:set_channel_rms ...
         route:route_out_adj ...
         combinechannels ...
         get_rms:get_rms_out ...
         set_rms ...
         acmon]

get_rms_in.tau = ${GET_RMS_TAU}

iirfilter.B = ${PREEMPHASIS_IIRFILTER_B}
iirfilter.A = ${PREEMPHASIS_IIRFILTER_A}

dc.gtdata = ${DC_GTDATA}
dc.gtmin = ${DC_GTMIN}
dc.gtstep = ${DC_GTSTEP}
dc.tau_rmslev = ${DC_TAU_ATTACK}
dc.tau_attack = ${DC_TAU_ATTACK}
dc.tau_decay = ${DC_TAU_DECAY}
dc.log_interp = yes

downsample.ratio = ${RESAMPLE_RATIO}
downsample.antialias.B = ${RESAMPLE_ANTIALIAS_B}
downsample.antialias.A = ${RESAMPLE_ANTIALIAS_A}

overlapadd.plugin_name = ci_simulation_ace:electrodogram
overlapadd.fftlen = 128  # FFT length / bins (fixed)
overlapadd.wnd.len = ${WND_LEN}

overlapadd.electrodogram.n_electrodes = ${ELECTRODOGRAM_N_ELECTRODES}
overlapadd.electrodogram.compression_coefficient = ${ELECTRODOGRAM_COMPRESSION_COEFFICIENT}
overlapadd.electrodogram.base_level = ${ELECTRODOGRAM_BASE_LEVEL}
overlapadd.electrodogram.saturation_level = ${ELECTRODOGRAM_SATURATION_LEVEL}
overlapadd.electrodogram.threshold_level = ${ELECTRODOGRAM_THRESHOLD_LEVEL}
overlapadd.electrodogram.comfort_level = ${ELECTRODOGRAM_COMFORT_LEVEL}
overlapadd.electrodogram.disabled_electrodes = ${ELECTRODOGRAM_DISABLED_ELECTRODES}
overlapadd.electrodogram.stimulation_order = ${ELECTRODOGRAM_STIMULATION_ORDER}

upsample.ratio = ${RESAMPLE_RATIO}
upsample.antialias.B = ${RESAMPLE_ANTIALIAS_B}
upsample.antialias.A = ${RESAMPLE_ANTIALIAS_A}

stimulation_signal.ac_name = electrodogram
stimulation_signal.compression_coefficient = ${ELECTRODOGRAM_COMPRESSION_COEFFICIENT}
stimulation_signal.base_level = ${ELECTRODOGRAM_BASE_LEVEL}
stimulation_signal.saturation_level = ${ELECTRODOGRAM_SATURATION_LEVEL}
stimulation_signal.threshold_level = ${ELECTRODOGRAM_THRESHOLD_LEVEL}
stimulation_signal.comfort_level = ${ELECTRODOGRAM_COMFORT_LEVEL}
stimulation_signal.electrode_distance = ${STIMULATION_SIGNAL_ELECTRODE_DISTANCE}
stimulation_signal.lambda = ${STIMULATION_SIGNAL_LAMBDA}
stimulation_signal.phase_duration = ${STIMULATION_SIGNAL_PHASE_DURATION}
stimulation_signal.interphase_gap = ${STIMULATION_SIGNAL_INTERPHASE_GAP}
stimulation_signal.phase_order = ${STIMULATION_SIGNAL_PHASE_ORDER}

route_in.out = [stimulation_signal:0 ...
                stimulation_signal:1 ...
                stimulation_signal:2 ...
                stimulation_signal:3 ...
                stimulation_signal:4 ...
                stimulation_signal:5 ...
                stimulation_signal:6 ...
                stimulation_signal:7 ...
                stimulation_signal:8 ...
                stimulation_signal:9 ...
                stimulation_signal:10 ...
                stimulation_signal:11 ...
                stimulation_signal:12 ...
                stimulation_signal:13 ...
                stimulation_signal:14 ...
                stimulation_signal:15 ...
                stimulation_signal:16 ...
                stimulation_signal:17 ...
                stimulation_signal:18 ...
                stimulation_signal:19 ...
                stimulation_signal:20 ...
                stimulation_signal:21]

get_channel_rms_in.tau = ${GET_RMS_TAU}

split.algos = [gtfb_analyzer:gtfb_analyzer0 ...
               gtfb_analyzer:gtfb_analyzer1 ...
               gtfb_analyzer:gtfb_analyzer2 ...
               gtfb_analyzer:gtfb_analyzer3 ...
               gtfb_analyzer:gtfb_analyzer4 ...
               gtfb_analyzer:gtfb_analyzer5 ...
               gtfb_analyzer:gtfb_analyzer6 ...
               gtfb_analyzer:gtfb_analyzer7 ...
               gtfb_analyzer:gtfb_analyzer8 ...
               gtfb_analyzer:gtfb_analyzer9 ...
               gtfb_analyzer:gtfb_analyzer10 ...
               gtfb_analyzer:gtfb_analyzer11 ...
               gtfb_analyzer:gtfb_analyzer12 ...
               gtfb_analyzer:gtfb_analyzer13 ...
               gtfb_analyzer:gtfb_analyzer14 ...
               gtfb_analyzer:gtfb_analyzer15 ...
               gtfb_analyzer:gtfb_analyzer16 ...
               gtfb_analyzer:gtfb_analyzer17 ...
               gtfb_analyzer:gtfb_analyzer18 ...
               gtfb_analyzer:gtfb_analyzer19 ...
               gtfb_analyzer:gtfb_analyzer20 ...
               gtfb_analyzer:gtfb_analyzer21]
split.channels = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
split.thread_platform = ${THREAD_PLATFORM}
split.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
split.worker_thread_priority = ${WORKER_THREAD_PRIORITY}

split.gtfb_analyzer0.coeff = ${GTFB_ANALYZER0_COEFF}
split.gtfb_analyzer0.norm_phase = ${GTFB_ANALYZER0_NORM_PHASE}
split.gtfb_analyzer0.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer1.coeff = ${GTFB_ANALYZER1_COEFF}
split.gtfb_analyzer1.norm_phase = ${GTFB_ANALYZER1_NORM_PHASE}
split.gtfb_analyzer1.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer2.coeff = ${GTFB_ANALYZER2_COEFF}
split.gtfb_analyzer2.norm_phase = ${GTFB_ANALYZER2_NORM_PHASE}
split.gtfb_analyzer2.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer3.coeff = ${GTFB_ANALYZER3_COEFF}
split.gtfb_analyzer3.norm_phase = ${GTFB_ANALYZER3_NORM_PHASE}
split.gtfb_analyzer3.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer4.coeff = ${GTFB_ANALYZER4_COEFF}
split.gtfb_analyzer4.norm_phase = ${GTFB_ANALYZER4_NORM_PHASE}
split.gtfb_analyzer4.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer5.coeff = ${GTFB_ANALYZER5_COEFF}
split.gtfb_analyzer5.norm_phase = ${GTFB_ANALYZER5_NORM_PHASE}
split.gtfb_analyzer5.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer6.coeff = ${GTFB_ANALYZER6_COEFF}
split.gtfb_analyzer6.norm_phase = ${GTFB_ANALYZER6_NORM_PHASE}
split.gtfb_analyzer6.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer7.coeff = ${GTFB_ANALYZER7_COEFF}
split.gtfb_analyzer7.norm_phase = ${GTFB_ANALYZER7_NORM_PHASE}
split.gtfb_analyzer7.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer8.coeff = ${GTFB_ANALYZER8_COEFF}
split.gtfb_analyzer8.norm_phase = ${GTFB_ANALYZER8_NORM_PHASE}
split.gtfb_analyzer8.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer9.coeff = ${GTFB_ANALYZER9_COEFF}
split.gtfb_analyzer9.norm_phase = ${GTFB_ANALYZER9_NORM_PHASE}
split.gtfb_analyzer9.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer10.coeff = ${GTFB_ANALYZER10_COEFF}
split.gtfb_analyzer10.norm_phase = ${GTFB_ANALYZER10_NORM_PHASE}
split.gtfb_analyzer10.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer11.coeff = ${GTFB_ANALYZER11_COEFF}
split.gtfb_analyzer11.norm_phase = ${GTFB_ANALYZER11_NORM_PHASE}
split.gtfb_analyzer11.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer12.coeff = ${GTFB_ANALYZER12_COEFF}
split.gtfb_analyzer12.norm_phase = ${GTFB_ANALYZER12_NORM_PHASE}
split.gtfb_analyzer12.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer13.coeff = ${GTFB_ANALYZER13_COEFF}
split.gtfb_analyzer13.norm_phase = ${GTFB_ANALYZER13_NORM_PHASE}
split.gtfb_analyzer13.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer14.coeff = ${GTFB_ANALYZER14_COEFF}
split.gtfb_analyzer14.norm_phase = ${GTFB_ANALYZER14_NORM_PHASE}
split.gtfb_analyzer14.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer15.coeff = ${GTFB_ANALYZER15_COEFF}
split.gtfb_analyzer15.norm_phase = ${GTFB_ANALYZER15_NORM_PHASE}
split.gtfb_analyzer15.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer16.coeff = ${GTFB_ANALYZER16_COEFF}
split.gtfb_analyzer16.norm_phase = ${GTFB_ANALYZER16_NORM_PHASE}
split.gtfb_analyzer16.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer17.coeff = ${GTFB_ANALYZER17_COEFF}
split.gtfb_analyzer17.norm_phase = ${GTFB_ANALYZER17_NORM_PHASE}
split.gtfb_analyzer17.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer18.coeff = ${GTFB_ANALYZER18_COEFF}
split.gtfb_analyzer18.norm_phase = ${GTFB_ANALYZER18_NORM_PHASE}
split.gtfb_analyzer18.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer19.coeff = ${GTFB_ANALYZER19_COEFF}
split.gtfb_analyzer19.norm_phase = ${GTFB_ANALYZER19_NORM_PHASE}
split.gtfb_analyzer19.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer20.coeff = ${GTFB_ANALYZER20_COEFF}
split.gtfb_analyzer20.norm_phase = ${GTFB_ANALYZER20_NORM_PHASE}
split.gtfb_analyzer20.order = ${GTFB_ANALYZER_ORDER}
split.gtfb_analyzer21.coeff = ${GTFB_ANALYZER21_COEFF}
split.gtfb_analyzer21.norm_phase = ${GTFB_ANALYZER21_NORM_PHASE}
split.gtfb_analyzer21.order = ${GTFB_ANALYZER_ORDER}

route_out.out = [:0 :2 :4 :6 :8 :10 :12 :14 :16 :18 :20 :22 :24 :26 :28 :30 :32 :34 :36 :38 :40 :42]
route_out.ac = [:0 :2 :4 :6 :8 :10 :12 :14 :16 :18 :20 :22 :24 :26 :28 :30 :32 :34 :36 :38 :40 :42]

get_channel_rms_out.tau = ${GET_RMS_TAU}

set_channel_rms.ac_name_in = get_channel_rms_in
set_channel_rms.ac_name_out = get_channel_rms_out

route_out_adj.out = [:0 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11 :12 :13 :14 :15 :16 :17 :18 :19 :20 :21]
route_out_adj.ac = [:0 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11 :12 :13 :14 :15 :16 :17 :18 :19 :20 :21]

get_rms_out.tau = ${GET_RMS_TAU}

set_rms.ac_name_in = get_rms_in
set_rms.ac_name_out = get_rms_out
