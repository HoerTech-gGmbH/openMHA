# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2024 Hörzentrum Oldenburg gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License, 
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.


algos = [get_rms:get_rms_in ...
         iirfilter ...
         dc ...
         route:route_analysis_in ...
         split:split_analysis ...
         route:route_analysis_out ...
         ci_simulation_cis:electrodogram ...
         ci_auralization_cis:stimulation_signal ...
         route:route_synthesis_in ...
         get_rms:get_channel_rms_in ...
         split:split_synthesis ...
         route:route_synthesis_out ...
         get_rms:get_channel_rms_out ...
         set_rms:set_channel_rms ...
         route:route_synthesis_out_adj ...
         combinechannels ...
         get_rms:get_rms_out ...
         set_rms ...
         acsave]

get_rms_in.tau = ${GET_RMS_TAU}

iirfilter.B = ${PREEMPHASIS_IIRFILTER_B}
iirfilter.A = ${PREEMPHASIS_IIRFILTER_A}

dc.gtdata = ${DC_GTDATA}
dc.gtmin = ${DC_GTMIN}
dc.gtstep = ${DC_GTSTEP}
dc.tau_rmslev = ${DC_TAU_ATTACK}
dc.tau_attack = ${DC_TAU_ATTACK}
dc.tau_decay = ${DC_TAU_DECAY}
dc.log_interp = yes

route_analysis_in.out = [:0 :0 :0 :0 :0 :0 :0 :0 :0 :0 :0 :0 :0]

split_analysis.algos = [identity ...
                        gtfb_analyzer:gtfb_analyzer_analysis0 ...
                        gtfb_analyzer:gtfb_analyzer_analysis1 ...
                        gtfb_analyzer:gtfb_analyzer_analysis2 ...
                        gtfb_analyzer:gtfb_analyzer_analysis3 ...
                        gtfb_analyzer:gtfb_analyzer_analysis4 ...
                        gtfb_analyzer:gtfb_analyzer_analysis5 ...
                        gtfb_analyzer:gtfb_analyzer_analysis6 ...
                        gtfb_analyzer:gtfb_analyzer_analysis7 ...
                        gtfb_analyzer:gtfb_analyzer_analysis8 ...
                        gtfb_analyzer:gtfb_analyzer_analysis9 ...
                        gtfb_analyzer:gtfb_analyzer_analysis10 ...
                        gtfb_analyzer:gtfb_analyzer_analysis11]
split_analysis.channels = [1 1 1 1 1 1 1 1 1 1 1 1 1]
split_analysis.thread_platform = ${THREAD_PLATFORM}
split_analysis.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
split_analysis.worker_thread_priority = ${WORKER_THREAD_PRIORITY}

split_analysis.gtfb_analyzer_analysis0.coeff = ${GTFB_ANALYZER_ANALYSIS0_COEFF}
split_analysis.gtfb_analyzer_analysis0.norm_phase = ${GTFB_ANALYZER_ANALYSIS0_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis0.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis1.coeff = ${GTFB_ANALYZER_ANALYSIS1_COEFF}
split_analysis.gtfb_analyzer_analysis1.norm_phase = ${GTFB_ANALYZER_ANALYSIS1_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis1.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis2.coeff = ${GTFB_ANALYZER_ANALYSIS2_COEFF}
split_analysis.gtfb_analyzer_analysis2.norm_phase = ${GTFB_ANALYZER_ANALYSIS2_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis2.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis3.coeff = ${GTFB_ANALYZER_ANALYSIS3_COEFF}
split_analysis.gtfb_analyzer_analysis3.norm_phase = ${GTFB_ANALYZER_ANALYSIS3_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis3.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis4.coeff = ${GTFB_ANALYZER_ANALYSIS4_COEFF}
split_analysis.gtfb_analyzer_analysis4.norm_phase = ${GTFB_ANALYZER_ANALYSIS4_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis4.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis5.coeff = ${GTFB_ANALYZER_ANALYSIS5_COEFF}
split_analysis.gtfb_analyzer_analysis5.norm_phase = ${GTFB_ANALYZER_ANALYSIS5_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis5.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis6.coeff = ${GTFB_ANALYZER_ANALYSIS6_COEFF}
split_analysis.gtfb_analyzer_analysis6.norm_phase = ${GTFB_ANALYZER_ANALYSIS6_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis6.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis7.coeff = ${GTFB_ANALYZER_ANALYSIS7_COEFF}
split_analysis.gtfb_analyzer_analysis7.norm_phase = ${GTFB_ANALYZER_ANALYSIS7_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis7.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis8.coeff = ${GTFB_ANALYZER_ANALYSIS8_COEFF}
split_analysis.gtfb_analyzer_analysis8.norm_phase = ${GTFB_ANALYZER_ANALYSIS8_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis8.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis9.coeff = ${GTFB_ANALYZER_ANALYSIS9_COEFF}
split_analysis.gtfb_analyzer_analysis9.norm_phase = ${GTFB_ANALYZER_ANALYSIS9_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis9.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis10.coeff = ${GTFB_ANALYZER_ANALYSIS10_COEFF}
split_analysis.gtfb_analyzer_analysis10.norm_phase = ${GTFB_ANALYZER_ANALYSIS10_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis10.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}
split_analysis.gtfb_analyzer_analysis11.coeff = ${GTFB_ANALYZER_ANALYSIS11_COEFF}
split_analysis.gtfb_analyzer_analysis11.norm_phase = ${GTFB_ANALYZER_ANALYSIS11_NORM_PHASE}
split_analysis.gtfb_analyzer_analysis11.order = ${GTFB_ANALYZER_ANALYSIS_ORDER}

route_analysis_out.out = [:0 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11 :12 :13 :14 :15 :16 :17 :18 :19 :20 :21 :22 :23 :24]

electrodogram.weights = ${ELECTRODOGRAM_WEIGHTS}
electrodogram.compression_coefficient = ${ELECTRODOGRAM_COMPRESSION_COEFFICIENT}
electrodogram.base_level = ${ELECTRODOGRAM_BASE_LEVEL}
electrodogram.saturation_level = ${ELECTRODOGRAM_SATURATION_LEVEL}
electrodogram.threshold_level = ${ELECTRODOGRAM_THRESHOLD_LEVEL}
electrodogram.maximum_comfortable_level = ${ELECTRODOGRAM_MAXIMUM_COMFORTABLE_LEVEL}
electrodogram.disabled_electrodes = ${ELECTRODOGRAM_DISABLED_ELECTRODES}
electrodogram.stimulation_order = ${ELECTRODOGRAM_STIMULATION_ORDER}

stimulation_signal.ac_name = electrodogram
stimulation_signal.compression_coefficient = ${ELECTRODOGRAM_COMPRESSION_COEFFICIENT}
stimulation_signal.base_level = ${ELECTRODOGRAM_BASE_LEVEL}
stimulation_signal.saturation_level = ${ELECTRODOGRAM_SATURATION_LEVEL}
stimulation_signal.threshold_level = ${ELECTRODOGRAM_THRESHOLD_LEVEL}
stimulation_signal.maximum_comfortable_level = ${ELECTRODOGRAM_MAXIMUM_COMFORTABLE_LEVEL}
stimulation_signal.electrode_distance = ${STIMULATION_SIGNAL_ELECTRODE_DISTANCE}
stimulation_signal.lambda = ${STIMULATION_SIGNAL_LAMBDA}
stimulation_signal.phase_duration = ${STIMULATION_SIGNAL_PHASE_DURATION}
stimulation_signal.interphase_gap = ${STIMULATION_SIGNAL_INTERPHASE_GAP}
stimulation_signal.phase_order = ${STIMULATION_SIGNAL_PHASE_ORDER}

route_synthesis_in.out = [stimulation_signal:0 ...
                          stimulation_signal:1 ...
                          stimulation_signal:2 ...
                          stimulation_signal:3 ...
                          stimulation_signal:4 ...
                          stimulation_signal:5 ...
                          stimulation_signal:6 ...
                          stimulation_signal:7 ...
                          stimulation_signal:8 ...
                          stimulation_signal:9 ...
                          stimulation_signal:10 ...
                          stimulation_signal:11]

get_channel_rms_in.tau = ${GET_RMS_TAU}

split_synthesis.algos = [gtfb_analyzer:gtfb_analyzer_synthesis0 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis1 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis2 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis3 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis4 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis5 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis6 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis7 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis8 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis9 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis10 ...
                         gtfb_analyzer:gtfb_analyzer_synthesis11]
split_synthesis.channels = [1 1 1 1 1 1 1 1 1 1 1 1]
split_synthesis.thread_platform = ${THREAD_PLATFORM}
split_synthesis.worker_thread_scheduler = ${WORKER_THREAD_SCHEDULER}
split_synthesis.worker_thread_priority = ${WORKER_THREAD_PRIORITY}
split_synthesis.gtfb_analyzer_synthesis0.coeff = ${GTFB_ANALYZER_SYNTHESIS0_COEFF}
split_synthesis.gtfb_analyzer_synthesis0.norm_phase = ${GTFB_ANALYZER_SYNTHESIS0_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis0.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis1.coeff = ${GTFB_ANALYZER_SYNTHESIS1_COEFF}
split_synthesis.gtfb_analyzer_synthesis1.norm_phase = ${GTFB_ANALYZER_SYNTHESIS1_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis1.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis2.coeff = ${GTFB_ANALYZER_SYNTHESIS2_COEFF}
split_synthesis.gtfb_analyzer_synthesis2.norm_phase = ${GTFB_ANALYZER_SYNTHESIS2_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis2.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis3.coeff = ${GTFB_ANALYZER_SYNTHESIS3_COEFF}
split_synthesis.gtfb_analyzer_synthesis3.norm_phase = ${GTFB_ANALYZER_SYNTHESIS3_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis3.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis4.coeff = ${GTFB_ANALYZER_SYNTHESIS4_COEFF}
split_synthesis.gtfb_analyzer_synthesis4.norm_phase = ${GTFB_ANALYZER_SYNTHESIS4_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis4.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis5.coeff = ${GTFB_ANALYZER_SYNTHESIS5_COEFF}
split_synthesis.gtfb_analyzer_synthesis5.norm_phase = ${GTFB_ANALYZER_SYNTHESIS5_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis5.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis6.coeff = ${GTFB_ANALYZER_SYNTHESIS6_COEFF}
split_synthesis.gtfb_analyzer_synthesis6.norm_phase = ${GTFB_ANALYZER_SYNTHESIS6_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis6.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis7.coeff = ${GTFB_ANALYZER_SYNTHESIS7_COEFF}
split_synthesis.gtfb_analyzer_synthesis7.norm_phase = ${GTFB_ANALYZER_SYNTHESIS7_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis7.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis8.coeff = ${GTFB_ANALYZER_SYNTHESIS8_COEFF}
split_synthesis.gtfb_analyzer_synthesis8.norm_phase = ${GTFB_ANALYZER_SYNTHESIS8_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis8.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis9.coeff = ${GTFB_ANALYZER_SYNTHESIS9_COEFF}
split_synthesis.gtfb_analyzer_synthesis9.norm_phase = ${GTFB_ANALYZER_SYNTHESIS9_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis9.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis10.coeff = ${GTFB_ANALYZER_SYNTHESIS10_COEFF}
split_synthesis.gtfb_analyzer_synthesis10.norm_phase = ${GTFB_ANALYZER_SYNTHESIS10_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis10.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}
split_synthesis.gtfb_analyzer_synthesis11.coeff = ${GTFB_ANALYZER_SYNTHESIS11_COEFF}
split_synthesis.gtfb_analyzer_synthesis11.norm_phase = ${GTFB_ANALYZER_SYNTHESIS11_NORM_PHASE}
split_synthesis.gtfb_analyzer_synthesis11.order = ${GTFB_ANALYZER_SYNTHESIS_ORDER}

route_synthesis_out.out = [:0 :2 :4 :6 :8 :10 :12 :14 :16 :18 :20 :22]
route_synthesis_out.ac = [:0 :2 :4 :6 :8 :10 :12 :14 :16 :18 :20 :22]

get_channel_rms_out.tau = ${GET_RMS_TAU}

set_channel_rms.ac_name_in = get_channel_rms_in
set_channel_rms.ac_name_out = get_channel_rms_out

route_synthesis_out_adj.out = [:0 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11]
route_synthesis_out_adj.ac = [:0 :1 :2 :3 :4 :5 :6 :7 :8 :9 :10 :11]

get_rms_out.tau = ${GET_RMS_TAU}

set_rms.ac_name_in = get_rms_in
set_rms.ac_name_out = get_rms_out
