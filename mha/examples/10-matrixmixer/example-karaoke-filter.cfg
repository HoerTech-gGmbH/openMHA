# This is file example-karaoke-filter.cfg

# How remove the voice from a stereo music recording

# Note: To run this example, you need to provide a stereo input sound
# file "karaoke-input.wav" yourself.  We suggest you use a pop song
# with a mix of vocals and instruments.  We cannot provide an example
# song for licensing reasons.  If you have an mp3 file, you can
# convert that mp3 file to wav e.g. with sox:
#
# sox somefile.mp3 karaoke-input.wav

# Note: We are using a very simple aproach here to achieve the karaoke
# filtering.  How well it works, depends on the recording.

# sampling rate to match the rate of the sound file used in this
# example.  You can change this here if your sound file has a
# different sampling rate.
srate = 44100

# input file is stereo, has 2 channels
nchannels_in = 2

# File to file processing in this example
iolib = MHAIOFile

# name of existing input file.
io.in = karaoke-input.wav

# name of output file to produce.  Will be overwritten if it exists.
# Note that the output file is a derived work of the input file as far
# as copyright is concerned.
io.out = karaoke-output.wav

# load matrixmixer plugin as the only plugin in the MHA.  Of course,
# matrix mixer can also be loaded into chains of signal processing.
# It can process waveform signal as well as spectral signal.
mhalib = matrixmixer

# Under the assumption that stereo pop music is usually mixed so that
# the vocals are contained with equal intensity in left and right
# channels, but the other instruments are mixed with slightly
# differing intensities to both channels, we can eliminate the vocals
# by subtracting the right channel from the left channel.  Note that
# to be safe that no clipping occurs, we use a factor of 0.5.  You can
# also usually amplify the output signal by using greater factors,
# even greater than 1.0, to compensate for the energy reduction from
# the subtraction.  But watch out for clipping.  The maximum
# permissible factor depends on your input file.
mha.m = [[0.5 -0.5]]
# This matrix has a single row, therefore matrixmixer produces a
# single output channel.

# This configuration can be started with
# mha ?read:example-karaoke-filter.cfg cmd=start cmd=quit

# When run like this, it will produce an output file karaoke-output.wav
# with a single audio channel.

# To verify that matrixmixer has reduced the channel count, run e.g.
#
# sfinfo karaoke-input.wav karaoke-output.wav
#
# This command will tell you that both files have the same duration, but
# the first file has 2 channels, while the second file has 1 channel.

# To validate the effect, play both files to headphones using a media
# player, e.g.
#
# mplayer karaoke-input.wav karaoke-output.wav
#
# When the first file plays through headphones, you will get an
# impression of how the song sounds in the published version, a mix of
# vocals and instruments.

# When the second file plays through the headphones, you will notice a
# change.  Depending on the recording that you used as input signal,
# any of the following effects might manifest themselves:
#
# The overall level will be reduced.  The vocals are either missing
# completely, or they are still audible but at significantly reduced
# level compared to the instruments.  It might also be that the vocals
# are missing, but the levels of the remaining instruments change with
# the modulation of the vocals.

# The described effects originate from different recording techniques
# that were used to produce the original stereo file: Recording of all
# instruments and vocals together in a single room with multiple
# microphones, recording of individual instruments and vocals
# seperately in a recording studio, application of compression.

# Exercises:
#
# Try more recordings.  You can also to experiment with channel
# subtractions with different weights on the two stereo channels,
# trying to eliminate music instruments that have been mixed into the
# stereo tracks with different intensities to both channels.
